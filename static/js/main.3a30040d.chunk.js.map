{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","None","sortMethod","setSortMethod","isReversed","setIsReversed","GoodsToView","goods","newGoods","Alphabetically","sort","a","b","localeCompare","Length","length","reverse","getGoodsToView","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,gCAAAA,E,iBAAAA,M,KAWE,IAAME,EAAgB,WAC3B,IA0BA,EAAoCC,mBAASH,EAASI,MAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA5BiB,SACrBC,EADqB,GAGjB,IADFL,EACC,EADDA,WAAYE,EACX,EADWA,WAEVI,EAAQ,YAAOD,GAEnB,OAAQL,GACN,KAAKL,EAASY,eACZD,EAAWA,EAASE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnD,MAEF,KAAKf,EAASiB,OACZN,EAAWA,EAASE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAWpD,OAJIX,IACFI,EAAWA,EAASQ,WAGfR,EAKqBS,CAC5BnB,EACA,CAAEI,aAAYE,eAQhB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAcN,EAASY,iBACtCW,KAAK,SACLF,UACEG,IAAG,iBAAkB,CACnB,WAAYnB,IAAeL,EAASY,iBAL1C,iCAYA,wBACEU,QAAS,kBAAMhB,EAAcN,EAASiB,SACtCM,KAAK,SACLF,UACEG,IAAG,oBAAqB,CACtB,WAAYnB,IAAeL,EAASiB,SAL1C,4BAYA,wBACEK,QAAS,kBAAMd,GAAeD,IAC9BgB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CAAE,YAAajB,IAHpD,sBASEF,GAAcE,IACd,wBACEe,QA3CW,WACnBhB,EAAcN,EAASI,MACvBI,GAAc,IA0CNe,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACE,6BACGZ,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCnHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3a30040d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  None = '',\n  Alphabetically = 'alphabetically',\n  Length = 'length',\n}\n\ninterface SortingOptions {\n  sortMethod: SortType;\n  isReversed: boolean;\n}\n\nexport const App: React.FC = () => {\n  const getGoodsToView = (\n    goods: string[],\n    { sortMethod, isReversed }: SortingOptions,\n  ) => {\n    let newGoods = [...goods];\n\n    switch (sortMethod) {\n      case SortType.Alphabetically:\n        newGoods = newGoods.sort((a, b) => a.localeCompare(b));\n        break;\n\n      case SortType.Length:\n        newGoods = newGoods.sort((a, b) => a.length - b.length);\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      newGoods = newGoods.reverse();\n    }\n\n    return newGoods;\n  };\n\n  const [sortMethod, setSortMethod] = useState(SortType.None);\n  const [isReversed, setIsReversed] = useState(false);\n  const GoodsToView: string[] = getGoodsToView(\n    goodsFromServer,\n    { sortMethod, isReversed },\n  );\n\n  const resetSorting = () => {\n    setSortMethod(SortType.None);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortMethod(SortType.Alphabetically)}\n          type=\"button\"\n          className={\n            cn('button is-info', {\n              'is-light': sortMethod !== SortType.Alphabetically,\n            })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortMethod(SortType.Length)}\n          type=\"button\"\n          className={\n            cn('button is-success', {\n              'is-light': sortMethod !== SortType.Length,\n            })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n\n        >\n          Reverse\n        </button>\n\n        {(sortMethod || isReversed) && (\n          <button\n            onClick={resetSorting}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {GoodsToView.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}